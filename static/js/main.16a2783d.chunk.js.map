{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","backgroundColor","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","About","myStyle","aria-labelledby","data-bs-parent","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","react_router_dom","react_router","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","react","src_App"],"mappings":"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","file":"static/js/main.16a2783d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {  Router } from \"react-router-dom\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n            <div\r\n              className={`form-check form-switch mx-2 text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                onClick={props.toggleMode}\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                // role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase!!\", \"success\");\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase!!\", \"success\");\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Has Been Cleared!!\", \"success\");\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Text Copied!!\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Has Been Removed!!\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#212529\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\"\r\n            }}\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleChange}\r\n            id=\"myBox\"\r\n            rows=\"6\"\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary my-1\" onClick={handleUpClick}>\r\n          Convert To UpperCase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick}>\r\n          Convert To LowerCase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        <div style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}>\r\n          {/* <h2>Your Text Summary</h2> */}\r\n          <p className=\"my-1\">\r\n            {text.split(/\\s+/).filter((element)=> {return element.length!==0}).length} words and {text.length} Characters\r\n          </p>\r\n          <p className=\"my-1\">{0.008 * text.split(\" \").filter((element)=> {return element.length!==0}).length} Minutes read</p>\r\n          <h3>Preview: </h3>\r\n          <p>{text.length>0 ? text : \"Nothing To Preview!!!\"}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return word.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '52px'}}>\r\n        {props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // })\r\n\r\n    let myStyle = {\r\n      color: props.mode === 'dark' ? 'white' : 'black',\r\n      backgroundColor: props.mode === 'dark' ? 'rgb(36 74 104)' : 'white',\r\n      \r\n\r\n    }\r\n    \r\n    // const [btnText, setBtnText] = useState(\"Enable Dark Mode\")\r\n\r\n    // const toggleStyle= () => {\r\n    //     if(myStyle.color === 'black') {\r\n    //         setMyStyle({\r\n    //             color: 'white',\r\n    //             backgroundColor: 'black',\r\n    //             border: '2px solid white',\r\n                \r\n    //         })\r\n    //         setBtnText(\"Enable Light Mode\");\r\n    //     }\r\n    //     else {\r\n    //         setMyStyle({\r\n    //             color: 'black',\r\n    //             backgroundColor : 'white'\r\n    //         })\r\n    //         setBtnText(\"Enable Dark Mode\");\r\n\r\n    //     }\r\n    // }\r\n  return (\r\n    <div className=\"container\" >\r\n    <h1 className=\"my-3\" style={{color: props.mode === 'dark' ? 'white' : 'black',}}>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\" >\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Analayse Your Text</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees control\r\n              the overall.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Free To Use</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Browser Compatible</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <button onClick={toggleStyle} className=\"btn btn-primary my-4\">{btnText}</button> */}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode Has Been Enabled!!\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Has Been Enabled!!\", \"success\");\n    }\n  };\n\n  return (\n    <div>\n      <Navbar\n        title=\"TextUtility\"\n        mode={mode}\n        aboutText=\"About Us\"\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <BrowserRouter>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <TextForm\n                  showAlert={showAlert}\n                  heading=\"Enter the text to analyze:\"\n                  mode={mode}\n                />\n              }\n            />\n            \n            <Route\n              path=\"/about\"\n              element={\n                <About mode={mode}/>\n              }\n            />\n              \n            \n          </Routes>\n        </BrowserRouter>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { StrictMode } from \"react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n\nreportWebVitals();"],"sourceRoot":""}